apiVersion: v1
data:
  envoy.yaml: |-
    node:
      id: waypoint~0.0.0.0~static-waypoint.default~default.svc.cluster.local
      cluster: inbound-vip|5201|http|baseline.default.svc.cluster.local
    admin:
      profile_path: /var/lib/istio/data/envoy.prof
      address:
        socket_address:
          address: 127.0.0.1
          port_value: 15000
      access_log:
        - name: envoy.access_loggers.file
          typed_config:
            '@type': type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
            path: /dev/null
    static_resources:
      listeners:
        - name: inbound_proxy_protocol
          address:
            socket_address:
              address: 0.0.0.0
              port_value: 15088
          listener_filters:
            - name: "proxy_protocol_tlv"
              typed_config:
                '@type': type.googleapis.com/envoy.extensions.filters.listener.proxy_protocol.v3.ProxyProtocol
                allow_requests_without_proxy_protocol: false
                rules:
                - tlv_type: 0xD0
                  on_tlv_present:
                    key: "peer_principal"
                - tlv_type: 0xD1
                  on_tlv_present:
                    key: "hbone_host"
                pass_through_tlvs:
                  match_type: INCLUDE_ALL
          filter_chain_matcher:
                matcher_tree:
                  input:
                    name: destination_ip
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.matching.common_inputs.network.v3.DestinationIPInput
                  prefix_match_map:
                    map:
                      # TODO we need the actual vip here
                      "10.":
                        action:
                          name: vip
                          typed_config:
                            "@type": type.googleapis.com/google.protobuf.StringValue
                            value: baseline
          filter_chains:
            - name: baseline
              filters:
                - name: proxy_protocol_authority
                  typed_config:
                    '@type': type.googleapis.com/envoy.extensions.filters.network.set_filter_state.v3.Config
                    on_new_connection:
                      - object_key: "io.istio.peer_principal"
                        factory_key: "envoy.string"
                        format_string:
                          text_format_source:
                            inline_string: "%DYNAMIC_METADATA(envoy.filters.listener.proxy_protocol:peer_principal)%"
                - name: envoy.filters.network.http_connection_manager
                  typed_config:
                    '@type': type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                    stat_prefix: ingress_http
                    access_log:
                      - name: envoy.access_loggers.stdout
                        typed_config:
                          '@type': type.googleapis.com/envoy.extensions.access_loggers.stream.v3.StdoutAccessLog
                    http_filters:
                      - name: envoy.filters.http.grpc_stats
                        typed_config:
                          '@type': type.googleapis.com/envoy.extensions.filters.http.grpc_stats.v3.FilterConfig
                          emit_filter_state: true
                          stats_for_all_methods: false
                      - name: envoy.filters.http.fault
                        typed_config:
                          '@type': type.googleapis.com/envoy.extensions.filters.http.fault.v3.HTTPFault
                      - name: envoy.filters.http.cors
                        typed_config:
                          '@type': type.googleapis.com/envoy.extensions.filters.http.cors.v3.Cors
                      - name: envoy.filters.http.router
                        typed_config:
                          '@type': type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
                    route_config:
                      name: inbound-vip|9080|http|baseline.default.svc.cluster.local
                      response_headers_to_add:
                        - header:
                            key: "from-waypoint"
                            value: "static-waypoint"
                      virtual_hosts:
                        - name: inbound|http|9080
                          domains:
                            - '*'
                          routes:
                            - match:
                                prefix: /
                              route:
                                cluster: inbound-vip|9080|http|baseline.default.svc.cluster.local
                              decorator:
                                operation: :9080/*
                              name: default
      clusters:
        - name: inbound-vip|9080|http|baseline.default.svc.cluster.local
          type: STRICT_DNS
          load_assignment:
            cluster_name: inbound-vip|9080|http|baseline.default.svc.cluster.local
            endpoints:
              - lb_endpoints:
                  - endpoint:
                      address:
                        socket_address:
                          address: baseline-headless.default.svc
                          port_value: 9080
kind: ConfigMap
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"v1","data":{"envoy.yaml":"node:\n  id: waypoint~0.0.0.0~static-waypoint.default~default.svc.cluster.local\n  cluster: inbound-vip|5201|http|baseline.default.svc.cluster.local\nadmin:\n  profile_path: /var/lib/istio/data/envoy.prof\n  address:\n    socket_address:\n      address: 127.0.0.1\n      port_value: 15000\n  access_log:\n    - name: envoy.access_loggers.file\n      typed_config:\n        '@type': type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog\n        path: /dev/null\nstatic_resources:\n  listeners:\n    - name: inbound_proxy_protocol\n      address:\n        socket_address:\n          address: 0.0.0.0\n          port_value: 15088\n      listener_filters:\n        - name: \"proxy_protocol_tlv\"\n          typed_config:\n            '@type': type.googleapis.com/envoy.extensions.filters.listener.proxy_protocol.v3.ProxyProtocol\n            allow_requests_without_proxy_protocol: false\n            rules:\n            - tlv_type: 0xD0\n              on_tlv_present:\n                key: \"peer_principal\"\n            - tlv_type: 0xD1\n              on_tlv_present:\n                key: \"hbone_host\"\n            pass_through_tlvs:\n              match_type: INCLUDE_ALL\n      filter_chain_matcher:\n            matcher_tree:\n              input:\n                name: destination_ip\n                typed_config:\n                  \"@type\": type.googleapis.com/envoy.extensions.matching.common_inputs.network.v3.DestinationIPInput\n              prefix_match_map:\n                map:\n                  # TODO we need the actual vip here\n                  \"10.\":\n                    action:\n                      name: vip\n                      typed_config:\n                        \"@type\": type.googleapis.com/google.protobuf.StringValue\n                        value: httpbin\n      filter_chains:\n        - name: httpbin\n          filters:\n            - name: proxy_protocol_authority\n              typed_config:\n                '@type': type.googleapis.com/envoy.extensions.filters.network.set_filter_state.v3.Config\n                on_new_connection:\n                  - object_key: \"io.istio.peer_principal\"\n                    factory_key: \"envoy.string\"\n                    format_string:\n                      text_format_source:\n                        inline_string: \"%DYNAMIC_METADATA(envoy.filters.listener.proxy_protocol:peer_principal)%\"\n            - name: envoy.filters.network.http_connection_manager\n              typed_config:\n                '@type': type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager\n                stat_prefix: ingress_http\n                access_log:\n                  - name: envoy.access_loggers.stdout\n                    typed_config:\n                      '@type': type.googleapis.com/envoy.extensions.access_loggers.stream.v3.StdoutAccessLog\n                http_filters:\n                  - name: envoy.filters.http.grpc_stats\n                    typed_config:\n                      '@type': type.googleapis.com/envoy.extensions.filters.http.grpc_stats.v3.FilterConfig\n                      emit_filter_state: true\n                      stats_for_all_methods: false\n                  - name: envoy.filters.http.fault\n                    typed_config:\n                      '@type': type.googleapis.com/envoy.extensions.filters.http.fault.v3.HTTPFault\n                  - name: envoy.filters.http.cors\n                    typed_config:\n                      '@type': type.googleapis.com/envoy.extensions.filters.http.cors.v3.Cors\n                  - name: envoy.filters.http.router\n                    typed_config:\n                      '@type': type.googleapis.com/envoy.extensions.filters.http.router.v3.Router\n                route_config:\n                  name: inbound-vip|8000|http|httpbin.default.svc.cluster.local\n                  response_headers_to_add:\n                    - header:\n                        key: \"from-waypoint\"\n                        value: \"static-waypoint\"\n                  virtual_hosts:\n                    - name: inbound|http|8000\n                      domains:\n                        - '*'\n                      routes:\n                        - match:\n                            prefix: /\n                          route:\n                            cluster: inbound-vip|8000|http|httpbin.default.svc.cluster.local\n                          decorator:\n                            operation: :8000/*\n                          name: default\n  clusters:\n    - name: inbound-vip|8000|http|httpbin.default.svc.cluster.local\n      type: STRICT_DNS\n      load_assignment:\n        cluster_name: inbound-vip|8000|http|httpbin.default.svc.cluster.local\n        endpoints:\n          - lb_endpoints:\n              - endpoint:\n                  address:\n                    socket_address:\n                      address: httpbin-headless.default.svc\n                      port_value: 8080"},"kind":"ConfigMap","metadata":{"annotations":{},"name":"static-waypoint-config","namespace":"default"}}
  creationTimestamp: "2024-06-04T17:15:34Z"
  name: static-waypoint-config
  namespace: default
  resourceVersion: "1297835"
  uid: 74423c3c-765c-4689-99e7-1f87859300a2
